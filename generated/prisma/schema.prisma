generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model criterio {
  id_criterio         Int                   @id(map: "criterios_pkey") @default(autoincrement())
  nombre              String                @db.VarChar
  descripcion         String
  fecha_creacion      DateTime              @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime?             @updatedAt @db.Timestamp(6)
  estado              Boolean
  porcentaje          Float                 @default(0.5)
  criterio_evaluacion criterio_evaluacion[]
}

model criterio_evaluacion {
  id_criterio         Int
  id_evaluacion       Int
  valoracion          String     @db.VarChar
  fecha_creacion      DateTime   @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime?  @updatedAt @db.Timestamp(6)
  estado              Boolean
  criterio            criterio   @relation(fields: [id_criterio], references: [id_criterio], onDelete: NoAction, onUpdate: NoAction, map: "criterios_evaluacion_id_criterio_fkey")
  evaluacion          evaluacion @relation(fields: [id_evaluacion], references: [id_evaluacion], onDelete: NoAction, onUpdate: NoAction, map: "criterios_evaluacion_id_evaluacion_fkey")

  @@id([id_criterio, id_evaluacion], map: "criterios_evaluacion_pkey")
}

model equipo {
  id_equipo           Int          @id @default(autoincrement())
  nombre              String       @db.VarChar
  id_estado           Int
  fecha_creacion      DateTime     @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime?    @updatedAt @db.Timestamp(6)
  estado              Boolean
  estado_equipo       estado       @relation(fields: [id_estado], references: [id_estado], onDelete: NoAction, onUpdate: NoAction)
  integrante          integrante[]
  videojuego          videojuego[]
}

model estado {
  id_estado  Int      @id(map: "estados_pkey") @default(autoincrement())
  estado     String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamptz(6)
  equipos    equipo[]
}

model evaluacion {
  id_evaluacion       Int                   @id @default(autoincrement())
  id_usuario          Int
  id_videojuegos      Int
  comentario          String?
  fecha_creacion      DateTime              @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime?             @updatedAt @db.Timestamp(6)
  estado              Boolean
  criterio_evaluacion criterio_evaluacion[]
  usuario             usuario               @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
  videojuego          videojuego            @relation(fields: [id_videojuegos], references: [id_videojuego], onDelete: NoAction, onUpdate: NoAction)
}

model integrante {
  id_integrante       Int              @id @default(autoincrement())
  id_equipo           Int
  primer_nombre       String           @db.VarChar
  correo              String           @db.VarChar
  usuario_github      String           @db.VarChar
  fecha_creacion      DateTime         @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime?        @updatedAt @db.Timestamp(6)
  estado              Boolean
  equipo              equipo           @relation(fields: [id_equipo], references: [id_equipo], onDelete: NoAction, onUpdate: NoAction)
  integrante_nrc      integrante_nrc[]
}

model integrante_nrc {
  id_integrante       Int
  id_nrc              Int
  fecha_creacion      DateTime   @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime?  @updatedAt @db.Timestamp(6)
  estado              Boolean
  integrante          integrante @relation(fields: [id_integrante], references: [id_integrante], onDelete: NoAction, onUpdate: NoAction)
  nrc                 nrc        @relation(fields: [id_nrc], references: [id_nrc], onDelete: NoAction, onUpdate: NoAction)

  @@id([id_integrante, id_nrc])
}

model materia {
  id_materia          Int       @id @default(autoincrement())
  nombre              String    @db.VarChar
  codigo              String    @db.VarChar
  fecha_creacion      DateTime  @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime? @updatedAt @db.Timestamp(6)
  estado              Boolean
  nrc                 nrc[]
}

model nrc {
  id_nrc              Int              @id @default(autoincrement())
  id_materia          Int
  codigo              String           @db.VarChar
  activo              Boolean
  id_usuario          Int
  fecha_creacion      DateTime         @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime?        @updatedAt @db.Timestamp(6)
  estado              Boolean
  integrante_nrc      integrante_nrc[]
  materia             materia          @relation(fields: [id_materia], references: [id_materia], onDelete: NoAction, onUpdate: NoAction)
  usuario             usuario          @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
}

model rol {
  id_rol              Int            @id(map: "roles_pkey") @default(autoincrement())
  rol                 String         @db.VarChar
  fecha_creacion      DateTime       @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime?      @updatedAt @db.Timestamp(6)
  estado              Boolean
  rol_servicio        rol_servicio[]
  usuario_rol         usuario_rol[]
}

model servicio {
  id_servicio         Int            @id @default(autoincrement())
  nombre              String         @db.VarChar
  descripcion         String         @db.VarChar
  url                 String         @db.VarChar
  metodo              String         @db.VarChar
  fecha_creacion      DateTime?      @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime?      @updatedAt @db.Timestamp(6)
  estado              Boolean
  rol_servicio        rol_servicio[]
}

model rol_servicio {
  id_rol              Int
  id_servicio         Int
  fecha_creacion      DateTime? @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime? @updatedAt @db.Timestamp(6)
  estado              Boolean
  rol                 rol       @relation(fields: [id_rol], references: [id_rol], onDelete: NoAction, onUpdate: NoAction)
  servicio            servicio  @relation(fields: [id_servicio], references: [id_servicio], onDelete: NoAction, onUpdate: NoAction)

  @@id([id_rol, id_servicio])
}

model usuario {
  id_usuario          Int           @id @default(autoincrement())
  primer_nombre       String        @db.VarChar
  segundo_nombre      String?       @db.VarChar
  primer_apellido     String        @db.VarChar
  segundo_apellido    String        @db.VarChar
  correo              String        @db.VarChar
  confirmado          Boolean       @default(false)
  token_confirmacion  String        @db.VarChar
  ultima_conexion     DateTime?     @db.Timestamp(6)
  password            String?       @db.VarChar
  fecha_actualizacion DateTime      @updatedAt @db.Timestamp(6)
  fecha_creacion      DateTime?     @default(now()) @db.Timestamp(6)
  estado              Boolean
  evaluacion          evaluacion[]
  nrc                 nrc[]
  usuario_rol         usuario_rol[]
}

model usuario_rol {
  id_usuario          Int
  id_rol              Int
  fecha_creacion      DateTime  @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime? @updatedAt @db.Timestamp(6)
  estado              Boolean
  rol                 rol       @relation(fields: [id_rol], references: [id_rol], onDelete: NoAction, onUpdate: NoAction, map: "usuario_roles_id_rol_fkey")
  usuario             usuario   @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "usuario_roles_id_usuario_fkey")

  @@id([id_usuario, id_rol], map: "usuario_roles_pkey")
}

model videojuego {
  id_videojuego       Int          @id @default(autoincrement())
  id_equipo           Int
  nombre              String       @db.VarChar
  descripcion         String?
  fecha_creacion      DateTime     @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime?    @updatedAt @db.Timestamp(6)
  estado              Boolean
  token_captcha       String?
  evaluacion          evaluacion[]
  equipo              equipo       @relation(fields: [id_equipo], references: [id_equipo], onDelete: NoAction, onUpdate: NoAction)
}
